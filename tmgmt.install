<?php

/**
 * @file
 * Installation hooks for the Translation Management module.
 */

/**
 * Implements hook_schema().
 */
function tmgmt_schema() {
  $schema['tmgmt_job'] = array(
    'description' => 'A translation job represents a translation order that can be assigned to a translator.',
    'fields' => array(
      'tjid' => array(
        'description' => 'The identifier of the translation job.',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'source_language' => array(
        'description' => 'The source language of the data.',
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
      ),
      'target_language' => array(
        'description' => 'The language into the data should be translated.',
        'type' => 'varchar',
        'length' => 12,
        'not null' => TRUE,
      ),
      'state' => array(
        'description' => 'The state of the translation job.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'Created timestamp.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'changed' => array(
        'description' => 'Changed timestamp.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'translator' => array(
        'description' => 'Machine name of the translator.',
        'type' => 'varchar',
        'length' => 128,
      ),
      'translator_context' => array(
        'description' => 'Translator specific configuration and context for this job.',
        'type' => 'text',
        'size' => 'big',
        'serialize' => TRUE,
      ),
      'translator_id' => array(
        'description' => 'Remote identifier of this translation job.',
        'type' => 'varchar',
        'length' => 256,
      ),
      'uid' => array(
        'description' => 'uid of the job creator',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'Optional user provided label of the job.',
        'type' => 'varchar',
        'length' => 256,
      ),
    ),
    'primary key' => array('tjid'),
    'indexes' => array(
      'state' => array('state'),
      'translator_id' => array('translator_id'),
    ),
  );

  $schema['tmgmt_job_item'] = array(
    'description' => 'A job item connects a source to a translation job.',
    'fields' => array(
      'tjiid' => array(
        'description' => 'The identifier of the translation job item.',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'tjid' => array(
        'description' => 'The identifier of the translation job.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'source_plugin' => array(
        'description' => 'Indicates the plugin which provides this item.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'item_type' => array(
        'description' => 'The type of the item, e.g. the entity type.',
        'type' => 'varchar',
        'length' => 128,
      ),
      'item_id' => array(
        'description' => 'The unique id (within the given item type) of the item.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'data' => array(
        'description' => 'Can be used by the source plugin to store the data if it can not be retrieved anymore later on.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
        'serialize' => TRUE,
      ),
      'translated_data' => array(
        'description' => 'Structured translated data.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
        'serialize' => TRUE,
      ),
    ),
    'primary key' => array('tjiid'),
    'indexes' => array(
      'job_id' => array('tjid'),
    ),
    'foreign keys' => array(
      'job' => array(
        'table' => 'tmgmt_job',
        'columns' => array('tjid'),
      ),
    ),
  );

  $schema['tmgmt_translator'] = array(
    'description' => 'A translator is a combination of a translator type and type specific configuration.',
    'fields' => array(
      'tid' => array(
        'description' => 'The identifier of the translator.',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Machine name identifier of the translator.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'Label of the translator.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'description' => array(
        'description' => 'Description of the translator.',
        'type' => 'text',
        'size' => 'medium',
      ),
      'translator_plugin' => array(
        'description' => 'Name of the translator service plugin.',
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'settings' => array(
        'description' => 'Translator specific settings.',
        'type' => 'text',
        'size' => 'big',
        'serialize' => TRUE,
      ),
      'weight' => array(
        'description' => 'The weight of the translator.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'The exportable status of the entity.',
        'type' => 'int',
        'not null' => TRUE,
        // Set the default to ENTITY_CUSTOM without using the constant as it is
        // not safe to use it at this point.
        'default' => 0x01,
        'size' => 'tiny',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('tid'),
    'unique keys' => array(
      'name' => array('name'),
    ),
  );

  $schema['tmgmt_job_message'] = array(
    'description' => 'A log message can be used to store events that affect a job.',
    'fields' => array(
      'tjmid' => array(
        'description' => 'The identifier of the message.',
        'type' => 'serial',
        'not null' => TRUE,
      ),
      'tjid' => array(
        'description' => 'The identifier of the translation job.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'message' => array(
        'description' => 'The language into the data should be translated.',
        'type' => 'text',
        'size' => 'big',
      ),
      'variables' => array(
        'description' => 'The variables of the message as expected by t().',
        'type' => 'text',
        'size' => 'big',
      ),
      'state_before' => array(
        'description' => 'The state of the translation job before the event that supplied the message occurred.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'state_after' => array(
        'description' => 'The state of the translation job after the event that supplied the message occurred.',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'created' => array(
        'description' => 'Created timestamp.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'type' => array(
        'description' => 'Type of the message (debug, notice, warning or error)',
        'type' => 'varchar',
        'length' => 128,
      ),
    ),
    'primary key' => array('tjmid'),
    'indexes' => array(
      'job_id' => array('tjid'),
      'state_before' => array('state_before'),
      'state_after' => array('state_after'),
    ),
  );

  return $schema;
}

/**
 * Add the user id of a job creation.
 */
function tmgmt_update_7000() {
  db_add_field('tmgmt_job', 'uid', array(
    'type' => 'int',
    'unsigned' => TRUE,
  ));
}

/**
 * Update not null to false
 */
function tmgmt_update_7001() {
  db_change_field('tmgmt_job', 'uid', 'uid', array(
    'description' => 'uid of the job creator',
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => FALSE,
  ));
}

/**
 * Add the label field to {tmgmt_job}.
 */
function tmgmt_update_7003() {
  db_add_field('tmgmt_job', 'label', array(
    'description' => 'Optional user provided label of the job.',
    'type' => 'varchar',
    'length' => 255,
  ));
}

/**
 * Add the data field to {tmgmt_job_item} and change item_id to a varchar.
 */
function tmgmt_update_7004() {
  db_add_field('tmgmt_job_item', 'data', array(
    'description' => 'Can be used by the source plugin to store the data.',
    'type' => 'text',
    'size' => 'big',
    'serialize' => TRUE,
  ));
  db_drop_unique_key('tmgmt_job_item', 'source');
  db_change_field('tmgmt_job_item', 'item_id', 'item_id',
    array(
      'description' => 'The unique id (within the given item type) of the item.',
      'type' => 'varchar',
      'length' => 128,
      'not null' => TRUE,
    ),
    array(
      'unique keys' => array(
        'source' => array('tjid', 'source_plugin', 'item_type', 'item_id'),
      ),
    )
  );
}

/**
 * Drop the job_item unique key and add the job index.
 */
function tmgmt_update_7005() {
  db_drop_unique_key('tmgmt_job_item', 'source');
  db_add_index('tmgmt_job_item', 'job_id', array('tjid'));
}

/**
 * Add the translator description column.
 */
function tmgmt_update_7006() {
  db_add_field('tmgmt_translator', 'description', array(
    'description' => 'Description of the translator.',
    'type' => 'text',
    'size' => 'medium',
  ));
}

/*
 * Add the type column to {tmgmt_job_message}.
 */
function tmgmt_update_7007() {
  db_add_field('tmgmt_job_message', 'type', array(
    'description' => 'Type of the message (debug, notice, warning or error)',
    'type' => 'varchar',
    'length' => 128,
  ));
}

/**
 * Add the weight column to {tmgmt_translator}.
 */
function tmgmt_update_7008() {
  db_add_field('tmgmt_translator', 'weight', array(
    'description' => 'The weight of the translator.',
    'type' => 'int',
    'not null' => TRUE,
    'default' => 0,
  ));
}
