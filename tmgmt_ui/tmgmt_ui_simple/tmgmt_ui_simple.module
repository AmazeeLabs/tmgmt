<?php

/**
 * @file
 * UI plugin for the Translation Management system that handles i18n strings.
 */

/**
 * Implements hook_form_FORMID_alter
 * Add submission capabilities to string forms.
 */
/*
function tmgmt_source_i18n_string_ui_form_i18n_string_translate_page_overview_form_alter(&$form, &$form_state) {
  $form['languages'] = array(
    '#options' => $form['languages']['#rows'],
    '#header' => $form['languages']['#header'],
    '#type' => 'tableselect',
  );
  $form['controls'] = array('#type' => 'fieldset');
  $translator_plugins = tmgmt_translator_plugin_labels(TRUE);
  $translator_plugins_keyed = array_keys($translator_plugins);
  $selected_translator_plugin = isset($form_state['values']['translator']) ? $form_state['values']['translator'] : reset($translator_plugins_keyed);
  $form['controls']['translator'] = array(
    '#type' => 'select',
    '#title' => t('Translation type'),
    '#options' => $translator_plugins,
    '#default_value' => $selected_translator_plugin,
  );
  $form['controls']['request'] = array('#type' => 'submit', '#value' => t('Request translation'));
  $form['#submit'][] = 'tmgmt_source_i18n_string_ui_form_submit';
}
*/
/**
 * Form submission.
 */

function tmgmt_ui_simple_i18n_string_ui_form_submit($form, &$form_state) {
  $values = $form_state['values'];
  $object = $values['object'];
  if ($languages = array_filter($values['languages'])) {
    // Request a job for every selected language
    $object_key = $object->get_key();
    $object_id = $object->get_type() . ':' . (is_array($object_key) ? implode(':', $object_key) : $object_key);
    $count = 0;
    foreach (array_keys($languages) as $langcode) {
      $count++;
      // Create the job object.
      $job = tmgmt_job_create($values['source_language'], $langcode, array('translator' => $values['translator']));
      // Create a job item and add it to the job.
      $job_item = tmgmt_job_item_create('i18n_string', 'i18n_string', $object_id);
      $job->addItem($job_item);
      $job->save();
      // Print a message to the screen and redirect the user.
    }
    drupal_set_message(format_plural($count, 'A translation job has been created.', '@count translation jobs have been created.'));
  }
}

/**
 * Implements hook_page_alter().
 */
function tmgmt_ui_simple_page_alter(&$page) {
  if (isset($page['content']['system_main']['translation_node_overview']) && ($node = menu_get_object())) {
    
    $page['content']['system_main']['translation_node_overview'] = drupal_get_form('tmgmt_ui_simple_node_form', $node, $page['content']['system_main']['translation_node_overview']);
  }
}

/**
 * Node overview form
 */
function tmgmt_ui_simple_node_form($form, &$form_state, $node, $original) {
  $form['object'] = array('#type' => 'value', '#value' => $node);
  $form['source_language'] = array('#type' => 'value', '#value' => $node->language);
  $form['languages'] = array(
    '#type' => 'tableselect',
    '#header' => $original['#header'],
    '#options' => array(),
  );
  // As keys are numeric, we assume languages are in the same order, need to rekey rows
  $language_list = module_exists('i18n_node') ? i18n_node_language_list($node) : locale_language_list();
  foreach ($language_list as $langcode => $language_name) {
    if ($langcode == LANGUAGE_NONE) {
      // Never show language neutral on the overview.
      continue;
    }
    $form['languages']['#options'][$langcode] = array_shift($original['#rows']);
  }
  $form['controls'] = tmgmt_ui_simple_controls_element($form, $form_state);
  return $form;
}

/**
 * Node overview submission form
 */
function tmgmt_ui_simple_node_form_submit($form, &$form_state) {
  $values = $form_state['values'];
  $node = $values['object'];
  if ($languages = array_filter($values['languages'])) {
    // Request a job for every selected language
    $count = 0;
    foreach (array_keys($languages) as $langcode) {
      $count++;
      // Create the job object.
      $job = tmgmt_job_create($values['source_language'], $langcode, array('translator' => $values['translator']));
      // Create a job item and add it to the job.
      $job_item = tmgmt_job_item_create('node', 'node', $node->nid);
      $job->addItem($job_item);
      $job->save();
      // Print a message to the screen and redirect the user.
    }
    drupal_set_message(format_plural($count, 'A translation job has been created.', '@count translation jobs have been created.'));
  }
  
}

/**
 * Subform for selecting translation method.
 */
function tmgmt_ui_simple_controls_element($form, &$form_state) {
  $element = array('#type' => 'fieldset');
  $translator_plugins = tmgmt_translator_plugin_labels(TRUE);
  $translator_plugins_keyed = array_keys($translator_plugins);
  $selected_translator_plugin = isset($form_state['values']['translator']) ? $form_state['values']['translator'] : reset($translator_plugins_keyed);
  $element['translator'] = array(
    '#type' => 'select',
    '#title' => t('Translation type'),
    '#options' => $translator_plugins,
    '#default_value' => $selected_translator_plugin,
  );
  $element['request'] = array('#type' => 'submit', '#value' => t('Request translation'));
  return $element;
}