<?php

/**
 * Implements hook_entity_info().
 */
function t9n_mgmt_entity_info() {
  return array(
    't9n_mgmt_map' => array(
      'label' => t('Translation Management Map'),
      'module' => 't9n_mgmt',
      'controller class' => 'TranslationManagementMapController',
      'entity class' => 'TranslationManagementMap',
      'base table' => 't9n_mgmt_map',
      'uri callback' => 'entity_class_uri',
      'label callback' => 'entity_class_label',
      // @todo Do we need fields here?
      'fieldable' => FALSE,
      'entity keys' => array(
        'id' => 'tmid',
      ),
      'bundles' => array(),
      'view modes' => array(
        'full' => array(
          'label' => t('Full'),
          'custom settings' => FALSE,
        ),
      ),
    ),
    't9n_mgmt_job' => array(
      'label' => t('Translation Management Job'),
      'module' => 't9n_mgmt',
      'controller class' => 'TranslationManagementJobController',
      'entity class' => 'TranslationManagementJob',
      'base table' => 't9n_mgmt_job',
      'uri callback' => 'entity_class_uri',
      'label callback' => 'entity_class_label',
      // @todo Add field integration.
      'fieldable' => FALSE,
      'entity keys' => array(
        'id' => 'tjid',
      ),
      'bundles' => array(),
      'view modes' => array(
        'full' => array(
          'label' => t('Full'),
          'custom settings' => FALSE,
        ),
      ),
    ),
    't9n_mgmt_translator' => array(
      'label' => t('Translation Management Translator'),
      'module' => 't9n_mgmt',
      'controller class' => 'TranslationManagementTranslatorController',
      'entity class' => 'TranslationManagementTranslator',
      'base table' => 't9n_mgmt_translator',
      'uri callback' => 'entity_class_uri',
      'label callback' => 'entity_class_label',
      'fieldable' => FALSE,
      'entity keys' => array(
        'id' => 'tid',
        'name' => 'name',
        'label' => 'label',
      ),
      'bundles' => array(),
      'view modes' => array(
        'full' => array(
          'label' => t('Full'),
          'custom settings' => FALSE,
        ),
      ),
    ),
  );
}

/**
 * Loads a translation map.
 */
function t9n_mgmt_map_load($tmid, $reset = FALSE) {
  $maps = t9n_mgmt_map_load_multiple(array($tmid), array(), $reset);
  return $maps ? reset($maps) : FALSE;
}

/**
 * Loads translation maps.
 */
function t9n_mgmt_map_load_multiple(array $tmids = array(), $conditions = array(), $reset = FALSE) {
  return entity_load('t9n_mgmt_map', $tmids, $conditions, $reset);
}

/**
 * Gets the map for the passed in arguments.
 *
 * @param $plugin
 *   Name of the source plugin.
 *
 * @param $item_type
 *   Item type.
 *
 * @param $item_id
 *   Item ID.
 *
 * @param $autocreate
 *   (Optional) If TRUE, create the map if not yet existent. Defaults to FALSE.
 *
 * @return TranslationManagementMap
 *   A translation map if existing or autocreated, FALSE otherwise.
 *
 */
function t9n_mgmt_map_get($plugin, $item_type, $item_id, $autocreate = FALSE) {
  $tmid = db_select('t9n_mgmt_map', 'tm')
    ->fields('tm', array('tmid'))
    ->condition('plugin', $plugin)
    ->condition('item_type', $item_type)
    ->condition('item_id', $item_id)
    ->execute()
    ->fetchField();

  // If we found a translation map id, return the map.
  if ($tmid) {
    return t9n_mgmt_map_load($tmid);
  }

  // If autocreate is set to TRUE, create a new map.
  if ($autocreate) {
    $map = entity_create('t9n_mgmt_map', array(
      'item_type' => $item_type,
      'item_id' => $item_id,
      'plugin' => $plugin,
    ));
    $map->save();
    return $map;
  }

  // Otherwise, return FALSE.
  return FALSE;
}


/**
 * Loads a translation job.
 */
function t9n_mgmt_job_load($tjid, $reset = FALSE) {
  $jobs = t9n_mgmt_job_load_multiple(array($tjid), array(), $reset);
  return $jobs ? reset($jobs) : FALSE;
}

/**
 * Loads translation jobs.
 */
function t9n_mgmt_job_load_multiple(array $tjids = array(), $conditions = array(), $reset = FALSE) {
  return entity_load('t9n_mgmt_job', $tjids, $conditions, $reset);
}

/**
 * Loads a translator.
 */
function t9n_mgmt_translator_load($tid, $reset = FALSE) {
  $translators = t9n_mgmt_translator_load_multiple(array($tid), array(), $reset);
  return $translators ? reset($translators) : FALSE;
}

/**
 * Loads translation maps.
 */
function t9n_mgmt_translator_load_multiple(array $tids = array(), $conditions = array(), $reset = FALSE) {
  return entity_load('t9n_mgmt_translator', $tids, $conditions, $reset);
}

