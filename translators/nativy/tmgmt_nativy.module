<?php
// $Id$

/**
 * @file
 *
 * Provides functions for translation provider nativy.com.
 */


/*
 * Implements hook_menu().
 */
function tmgmt_nativy_menu() {
  // @todo Remove this path after finishing development!
  $items['soaptest'] = array(
    'title' => 'Testcallback',
    'type' => MENU_CALLBACK,
    'page callback' => 'tmgmt_nativy_test_page',
    'access arguments' => array('access content'),
  );
<<<<<<< HEAD

  $items['admin/config/services/nativy'] = array(
    'title' => 'Nativy Translator',
    'description' => 'Configure Nativy Translator service.',
    'type' => MENU_CALLBACK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('tmgmt_nativy_settings'),
    'access arguments' => array('administer site configuration'),
  );

=======
>>>>>>> ccdf8d743ec9d0a44c4c44110cfe60916f92ce17
  // @todo menu callback for order complete callback
  $items['nativy/callback'] = array(
    'title' => 'Nativy Notification',
    'description' => 'Callback for the completion notification of a translation job.',
    'type' => MENU_CALLBACK,
    'page callback' => 'tmgmt_nativy_process_callback',
    'access callback' => TRUE,
  );
  return $items;
}

/**
 * Implements hook_tmgmt_translator_plugin_info().
 */
function tmgmt_nativy_tmgmt_translator_plugin_info() {
  return array(
    'nativy' => array(
      'label' => t('Nativy translator'),
      'description' => t('Nativy translator plugin that returns translations from nativy.com.'),
      'controller class' => 'TMGMTNativyTranslatorController',
    ),
  );
}

/**
 * Callback page.
 * 
 * @TODO Real processing. For now we just log whatever comes in.
 */
function tmgmt_nativy_process_callback() {
  $items[] = t('Checking for your translation from Nativy.');
  watchdog('nativy', 'Callback REQUEST.  <br /><pre>!post</pre>', array('!post' => print_r($_REQUEST, TRUE)));
  // Get the order id
  if (isset($_REQUEST['orderid'])) {
    $orderid = $_REQUEST['orderid'];
    $items[] = t('Your order id is @orderid', array('@orderid' => $orderid));
    // @todo tmgmt_job_load_multiple() doesn't seem to work for this.
    if ($jobs = entity_load('tmgmt_job', FALSE, array('reference' => $orderid))) {
      $job = reset($jobs);
      $controller = $job->getTranslatorController();
      if (!is_a($controller, 'TMGMTNativyTranslatorController')) {
        $items[] = t('The job was not assigned to Nativy.');
      }
      elseif ($controller->retrieveTranslation($job)) {
        $items[] = t('Your translation has been retrieved successfully.');
      }
      else {
        $items[] = t('We cannot retrieve your translation.');
      }

    }
    else {
      $items[] = t('Cannot find a translation job matching that order id');
    }
  }
  else {
    $items[] = t('We cannot find your order id.');
  }
  $build['steps'] = array(
    '#theme' => 'item_list',
    '#items' => $items,
  );
  return $build;
}

/*
 * Used for development purposes only!
 */
function tmgmt_nativy_test_page($jobid) {
  $job = tmgmt_job_load($jobid);
  $translator_name = 'nativy_test';
  $translator = tmgmt_translator_load($translator_name);
  $controller = $translator->getPluginController();
  $form = $form_state = array();
  $job->translator = $translator_name;
  $form = $controller->checkoutSettingsForm($form, $form_state, $job);
  return $form;
  return "TESTPAGE Job Id = $jobid";
}
