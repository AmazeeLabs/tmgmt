<?php
// $Id$

/**
 * @file
 *
 * Provides functions for translation provider nativy.com.
 */


/*
 * Implements hook_menu().
 */
function tmgmt_nativy_menu() {
  /* Remove this path after finishing development! */
  $items['soaptest'] = array(
    'title' => 'Testcallback',
    'type' => MENU_CALLBACK,
    'page callback' => 'tmgmt_nativy_test_page',
    'access arguments' => array('access content'),
  );
  // @todo menu callback for order complete callback
  $items['nativy/callback'] = array(
    'title' => 'Nativy Notification',
    'description' => 'Callback for the completion notification of a translation job.',
    'type' => MENU_CALLBACK,
    'page callback' => 'tmgmt_nativy_process_callback',
  );
  return $items;
}

/**
 * Implements hook_tmgmt_translator_plugin_info().
 */
function tmgmt_nativy_tmgmt_translator_plugin_info() {
  return array(
    'nativy' => array(
      'label' => t('Nativy translator'),
      'description' => t('Nativy translator plugin that returns translations from nativy.com.'),
      'controller class' => 'TMGMTNativyTranslatorController',
    ),
  );
}

/**
 * Callback page.
 * 
 * @TODO Real processing. For now we just log whatever comes in.
 */
function tmgmt_nativy_process_callback() {
  watchdog('nativy', 'Callback REQUEST.  <br /><pre>!post</pre>', array('!post' => print_r($_REQUEST, TRUE)));
}

/*
 * Used for development purposes only!
 */
function tmgmt_nativy_test_page($jobid) {
  $job = tmgmt_job_load($jobid);
  $translator_name = 'nativy_test';
  $translator = tmgmt_translator_load($translator_name);
  $controller = $translator->getPluginController();
  $form = $form_state = array();
  $job->translator = $translator_name; 
  $form = $controller->jobSettingsForm($form, $form_state, $job);
  return $form;
  return "TESTPAGE Job Id = $jobid";
}
