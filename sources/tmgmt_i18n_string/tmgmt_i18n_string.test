<?php

/**
 * Basic i18n String Source tests.
 */
class TMGMTI18nStringSourceTestCase extends TMGMTBaseTestCase {

  /**
   * Implements getInfo().
   */
  static function getInfo() {
    return array(
      'name' => t('i18n String Source tests'),
      'description' => t('Exporting source data from i18n string and saving translations back'),
      'group' => t('Translation Management'),
    );
  }

  /**
   * Overrides SimplenewsTestCase::setUp()
   */
  function setUp() {
    parent::setUp(array('tmgmt_i18n_string', 'tmgmt_test'));
  }

  function testI18nStringSource() {
    $source_text = $this->randomName();
    $string_name = 'some:string:' . $this->randomName();

    $string = i18n_string($string_name, $source_text);

    // Create the new job and job item.
    $job = $this->createJob();
    $job->translator = 'test_translator';
    $job->translator_context = array();

    $item1 = tmgmt_job_item_create('i18n_string', 'i18n_string', $string_name);

    $data = $item1->getSourceData();
    $this->assertEqual($source_text, $data['#text']);

    $job->addItem($item1);

    // Check the structure of the imported data.
    $this->assertEqual($item1->item_id, $string_name, t('String is correctly saved'));

    $job->requestTranslation();

    $this->assertEqual(i18n_string_translate($string_name, $source_text, array('langcode' => 'de')), $source_text);
  }
}