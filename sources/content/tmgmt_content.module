<?php

/**
 * @file
 * Source plugin for the Translation Management system that handles entities.
 */
use Drupal\Core\Entity\Plugin\DataType\EntityReference;
use Drupal\Core\Form\FormStateInterface;
use Drupal\tmgmt\JobInterface;

/**
 * Implements hook_tmgmt_source_suggestions()
 */
function tmgmt_content_tmgmt_source_suggestions(array $items, JobInterface $job) {
  $suggestions = array();

  foreach ($items as $item) {
    if ($item instanceof \Drupal\tmgmt\JobItemInterface && $item->getPlugin() == 'content') {
      // Load the entity and extract the bundle name to get all fields from the
      // current entity.
      $entity = entity_load($item->getItemType(), $item->getItemId());

      // Loop over all fields, check if they are NOT translatable. Only if a
      // field is not translatable we may suggest a referenced entity.
      $content_translation_manager = \Drupal::service('content_translation.manager');
      foreach ($entity as $field) {
        /* @var \Drupal\Core\Field\FieldItemListInterface $field */
        $definition = $field->getFieldDefinition();

        if (!$definition->isTranslatable()) {
          continue;
        }

        // Loop over all field items.
        foreach ($field as $field_item) {
          // Loop over all properties of a field item.
          foreach ($field_item->getProperties(TRUE) as $property) {
            if ($property instanceof EntityReference && $target = $property->getValue()) {
              $enabled = $content_translation_manager->isEnabled($target->getEntityTypeId(), $target->bundle());
              if ($enabled) {
                // Add the translation as a suggestion.
                $suggestions[] = array(
                  'job_item' => tmgmt_job_item_create('content', $target->getEntityTypeId(), $target->id()),
                  'reason' => t('Field @label', array('@label' => $definition->getLabel())),
                  'from_item' => $item->id(),
                );
              }
            }
          }
        }
      }
    }
  }

  return $suggestions;
}
