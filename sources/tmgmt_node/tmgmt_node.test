<?php

/**
 * Basic Node Source tests.
 */
class TMGMTNodeSourceTestCase extends TMGMTBaseTestCase {

  /**
   * Implements getInfo().
   */
  static function getInfo() {
    return array(
      'name' => t('Node Source tests'),
      'description' => t('Exporting source data from nodes and saving translations back to nodes'),
      'group' => t('Translation Management'),
    );
  }

  /**
   * Overrides SimplenewsTestCase::setUp()
   */
  function setUp() {
    parent::setUp(array('tmgmt_node', 'tmgmt_test', 'translation'));

    variable_set('language_content_type_page', TRANSLATION_ENABLED);
  }

  function testNodeSource() {
    $node = $this->drupalCreateNode();

    // Create the new job and job item.
    $job = $this->createJob();
    $job->translator = 'test_translator';
    $job->translator_context = array();
    $job->save();

    $item1 = $job->addItem('node', 'entity', $node->vid);

    // Check the structure of the imported data.
    $this->assertEqual($item1->item_id, $node->vid, t('Node identifier is correctly saved'));
    $data = $item1->getSourceData();
    $this->assertEqual($node->title, $data['node_title'][0]['value']['#text'], t('Node title is extracted.'));
    $this->assertEqual($node->body[LANGUAGE_NONE][0]['value'], $data['body'][0]['value']['#text'], t('Node body is extracted.'));

    $job->requestTranslation();
    $job->accepted();

    foreach ($job->getItems() as $item) {
      $this->assertTrue(strpos($item->translated_data, $node->title) !== FALSE, t('Node title is correctly translated.'));
    }
  }
}
